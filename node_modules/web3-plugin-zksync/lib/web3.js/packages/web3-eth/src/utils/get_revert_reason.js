"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRevertReason = exports.parseTransactionError = void 0;
const web3_errors_1 = require("web3-errors");
const web3_eth_abi_1 = require("web3-eth-abi");
const rpc_method_wrappers_js_1 = require("../rpc_method_wrappers.js");
const parseTransactionError = (error, contractAbi) => {
    if (error instanceof web3_errors_1.ContractExecutionError && error.cause instanceof web3_errors_1.Eip838ExecutionError) {
        if (contractAbi !== undefined) {
            const errorsAbi = contractAbi.filter(abi => (0, web3_eth_abi_1.isAbiErrorFragment)(abi));
            (0, web3_eth_abi_1.decodeContractErrorData)(errorsAbi, error.cause);
            return {
                reason: error.cause.message,
                signature: error.cause.data?.slice(0, 10),
                data: error.cause.data?.substring(10),
                customErrorName: error.cause.errorName,
                customErrorDecodedSignature: error.cause.errorSignature,
                customErrorArguments: error.cause.errorArgs,
            };
        }
        return {
            reason: error.cause.message,
            signature: error.cause.data?.slice(0, 10),
            data: error.cause.data?.substring(10),
        };
    }
    if (error instanceof web3_errors_1.InvalidResponseError &&
        !Array.isArray(error.cause?.errors) &&
        error.cause !== undefined) {
        return error.cause.message;
    }
    throw error;
};
exports.parseTransactionError = parseTransactionError;
async function getRevertReason(web3Context, transaction, contractAbi, returnFormat = web3Context.defaultReturnFormat) {
    try {
        await (0, rpc_method_wrappers_js_1.call)(web3Context, transaction, web3Context.defaultBlock, returnFormat);
        return undefined;
    }
    catch (error) {
        return (0, exports.parseTransactionError)(error, contractAbi);
    }
}
exports.getRevertReason = getRevertReason;
//# sourceMappingURL=get_revert_reason.js.map