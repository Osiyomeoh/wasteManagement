import { Contract } from 'web3-eth-contract';
import type { Address, ApprovalBasedPaymasterInput, GeneralPaymasterInput, PaymasterInput, PaymasterParams } from './types';
export declare const PAYMASTER_FLOW_ABI: Contract<readonly [{
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "_token";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "_minAllowance";
        readonly type: "uint256";
    }, {
        readonly internalType: "bytes";
        readonly name: "_innerInput";
        readonly type: "bytes";
    }];
    readonly name: "approvalBased";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes";
        readonly name: "input";
        readonly type: "bytes";
    }];
    readonly name: "general";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}]>;
export declare function getApprovalBasedPaymasterInput(paymasterInput: ApprovalBasedPaymasterInput): string;
export declare function getGeneralPaymasterInput(paymasterInput: GeneralPaymasterInput): string;
export declare function getPaymasterParams(paymasterAddress: Address, paymasterInput: PaymasterInput): PaymasterParams;
//# sourceMappingURL=paymaster-utils.d.ts.map